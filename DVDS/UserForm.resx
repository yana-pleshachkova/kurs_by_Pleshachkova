<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +cgAAAAASUVORK5CYII=
</value>
  </data>
</root>